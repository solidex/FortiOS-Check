
- hosts: ha_master

  gather_facts: no
  vars:
    acc_inconsistency: []
  vars_prompt:
    - name: username
      prompt: "username"
      private: no
    - name: password
      prompt: "password"
    - name: valid
      promt: is valid (yes/no)
      private: no
  tasks:

  - name: Test SSH - 1
    delegate_to: localhost
    fortiosconfig:
     action: "ssh"
     host:  "{{ host }}"
     username: "{{ username  }}"
     password: "{{ password }}"
     commands: |
               get system status
    register: ssh_1
    ignore_errors: yes


  - name: Test HTTPS - 1
    delegate_to: localhost
    fortiosconfig:
      config: "system firmware"
      action: "monitor"
      host:  "{{ host }}"
      username: "{{ username  }}"
      password: "{{ password }}"
      https: "{{ https }}"
    register: https_1
    ignore_errors: yes

  - name: "Check admin access was ok - 1.1"
    set_fact:
      acc_inconsistency: "{{ acc_inconsistency + [ inventory_hostname + ': admin access via SSH NOT ok!' ] }}"
    when: "(ssh_1.failed and valid | bool) or (not ssh_1.failed and not valid | bool)"

  - name: "Check admin access was ok - 1.2"
    set_fact:
      acc_inconsistency: "{{ acc_inconsistency + [ inventory_hostname + ': admin access via HTTPS NOT ok!' ] }}"
    when: "(https_1.failed and valid | bool) or (not https_1.failed and not valid | bool)"


  - name: Analyze and print result
    debug:
       msg: "{{ 'Accounts ok' if (acc_inconsistency | length) == 0 else acc_inconsistency}}"
