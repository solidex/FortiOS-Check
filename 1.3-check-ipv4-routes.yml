
- hosts: ha_master

  gather_facts: no
  vars:
    bgp_inconsistency: []
    route_n: []
  tasks:

  - name: Get IPv4 routing table
    delegate_to: localhost
    fortiosconfig:
      config: "router ipv4"
      action: "monitor"
      host:  "{{ host }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: "{{ https }}"
      ssl_verify: False
    register: router_ipv4
    when: not vdom_mode

  - name: Get IPv4 routing table
    delegate_to: localhost
    fortiosconfig:
      config: "router ipv4"
      action: "monitor"
      host:  "{{ host }}"
      username: "{{ username }}"
      password: "{{ password }}"
      https: "{{ https }}"
      ssl_verify: False
      vdom: "{{ vdom }}"
    register: router_ipv4
    when: vdom_mode

  - name: "Check route exist"
    set_fact:
      bgp_inconsistency: "{{ bgp_inconsistency + [ inventory_hostname + ': no BGP route to ' + item + ' in IPv4 rt table'] }}"
    when: "router_ipv4.meta.results | json_query(qry) == []"
    vars:
      qry: "[?ip_mask=='{{ item }}']"
    with_items: "{{ expected_ipv4_routes }}"

  - name: Analyze and print result
    debug:
       msg: "{{ 'IPv4 routes ok' if (bgp_inconsistency | length) == 0 else bgp_inconsistency}}"
